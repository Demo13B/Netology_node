services:
  redis:
    image: redis:8.2.1-alpine
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - back

  mongo:
    image: mongo:8.0.14-rc1-noble
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongo_data:/data/db
    networks:
      - back

  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/
      - ME_CONFIG_BASICAUTH_ENABLED=true
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
    depends_on:
      - mongo
    networks:
      - back

  backend:
    image: node:24.8
    working_dir: /app/Library
    env_file:
      - .env
    ports:
      - 80:3000
    restart: unless-stopped
    volumes:
      - ./:/app
    depends_on:
      - redis
      - counter
      - mongo
    networks:
      - back
    command: ["yarn", "nodemon", "./Library/index.js"]

  counter:
    image: node:24.8
    working_dir: /app
    env_file:
      - .env
    ports:
      - 8080:3001
    restart: unless-stopped
    volumes:
      - ./:/app
    depends_on:
      - redis
    networks:
      - back
    command: ["yarn", "nodemon", "Counter/index.js"]

volumes:
  redis_data:
  mongo_data:

networks:
  back: